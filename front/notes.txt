node 15.2.1
npm 6.14.*

create project:
vue cli 4.5.6
vue create dicerollercoaster
? Please pick a preset: Manually select features
? Check the features needed for your project: Choose Vue version, Babel, Router, Vuex, CSS Pre-processors
? Choose a version of Vue.js that you want to start the project with 2.x
? Use history mode for router? (Requires proper server setup for index fallback in production) Yes
? Where do you prefer placing config for Babel, ESLint, etc.? In dedicated config files
? Save this as a preset for future projects? No


vue add vuetify (2.3.10)
? Choose a preset: Prototype (rapid development)
npm install axios


si possible toutes les modifications d'éléments (ajout, suppr, modif) doivent passer par un clic droit
la majorité des éléments sont affichés en LIMIT X, avec un bouton qui permet d'avoir la vue complète
suppression du tableau des intervals, info non pertinente
faire le système de d100 classique pour commencer, ça sera plus simple
rien n'est admin par le GM, les joueurs saisissent touts les élemnts de liste variable (points, stats, saisie de texte, équipement)
    l'admin a en fait juste la vue sur le détails de tous les autres joueurs

structure de la page, de haut en bas, de gauche à droite:
nom campagne
nom perso, sous titre perso
bloc de point (top 3?)
	format liste de card (à voir pour les rétrecir?)
, bloc équipement (top 5?)
	format liste
, bloc stats (top 9?, bouton roll affiché on click)
	format tableau
chat/historisation des actions (top 5 à 7)
	inscription des résultats de jet de dés (pattern "$NOMPERSO: $NOMSTAT $VALEUR STAT résultat: $RES", couleur envoyé par le serveur en fonction du résultat)
	inscription des changements de valeurs de point
	inscription des changements de valeurs de stat
notes de session actuelle
	init par bouton commencer la session cliqué par le GM qui enregistre timestamp
	text arrea partagé par tous les utilisateurs de la campagne (comment merge les infos si elles sont contradictoires?)
	fin par bouton finir la session cliqué par le gm qui enregistre timestamp, envoi en bdd 
notes des sessions précédantes (top 1)
blocs saisies de texte



TODO:
    logique:
        intégrer le composant text-input là où c'est nécessaire :*
        trouver un meilleur système pour stocker les fonctions transverses (mettre dans des fichiers séparés pour faire des modules)
            coté enfant:
                l'enfant émetterait un event de type: this.$emit(crudOperation, componentName, componentId, {field1: value1, field2: value2})
                comment rattacher le bouton pour insert au composant enfant directement???

        pour l'ajout la modif et la suppr d'element cf https://vuetifyjs.com/en/components/data-tables/#edit-dialog et https://vuetifyjs.com/en/components/data-tables/#simple-checkbox
        voir si possible de déplacer les éléments (et d'update les listes en conséquences)
        faire les deux autres vues new profil et select profil
        si possible au double clic sur un elem du tableau faire pop un input pour changer la valeur
        commencer à voir le stockage des données dans vuex, stacker les données quand il y a un changement et écrire une fonction de test pour envoi au srv
            principe:
                au changement d'une valeur d'un input, enregistrer dans un objet stocké dans vuex
                puis faire apparaitre un bouton valider et annuler en haut à droite de l'écran
                à la validation, on envoi toutes les modifications enregistrées
                à l'annulation on vide complètement l'objet
        au changement de page, prompt pour sauvegarder les modifications
        faire un stockage séparé qui contiendra la page affichée à la fermeture de la session et l'affichage ou le cachages des éléments
    esthétique:
        faire les boutons pour cacher les éléments sur chaque partie
        revoir pour passer tout le display flex en vue directement pour plus de cohérence
        espacer les différents éléments entre eux (notamment en hauteur)
        intégrer les title tooltip vuetify
        revoir la taille du menu qui est pas complètement égal

